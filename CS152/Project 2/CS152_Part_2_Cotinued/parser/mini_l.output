Grammar

    0 $accept: program $end

    1 program: begin_program

    2 begin_program: function begin_program
    3              | %empty

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    5 declaration_list: declaration SEMICOLON declaration_list
    6                 | %empty

    7 statement_list: statement SEMICOLON statement_list
    8               | %empty

    9 declaration: IDENT ident_list

   10 ident_list: COMMA IDENT ident_list
   11           | COLON ident_rhs

   12 ident_rhs: INTEGER
   13          | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   14 statement: var ASSIGN expression
   15          | IF bool-expr THEN statement SEMICOLON if_loop
   16          | WHILE bool-expr BEGINLOOP statement SEMICOLON statement_loop
   17          | DO BEGINLOOP statement SEMICOLON statement_loop WHILE bool-expr
   18          | FOREACH IDENT IN IDENT BEGINLOOP statement_loop
   19          | READ var_list
   20          | WRITE var_list
   21          | CONTINUE
   22          | RETURN expression

   23 if_loop: ENDIF
   24        | statement SEMICOLON if_loop
   25        | ELSE statement SEMICOLON ifelse_loop

   26 ifelse_loop: ENDIF
   27            | statement SEMICOLON ifelse_loop

   28 statement_loop: ENDLOOP
   29               | statement SEMICOLON statement_loop

   30 var_list: var
   31         | var COMMA var_list

   32 bool-expr: relation-and-expr more-bool

   33 more-bool: OR relation-and-expr more-bool
   34          | %empty

   35 relation-and-expr: relation-expr more-expr

   36 more-expr: AND relation-expr more-expr
   37          | %empty

   38 relation-expr: NOT relation-cont
   39              | relation-cont

   40 relation-cont: expression comp expression
   41              | TRUE
   42              | FALSE
   43              | L_PAREN bool-expr R_PAREN

   44 comp: EQ
   45     | NEQ
   46     | LT
   47     | GT
   48     | LTE
   49     | GTE

   50 expression: multiplicative-expr expr_arith

   51 expr_arith: ADD multiplicative-expr expr_arith
   52           | SUB multiplicative-expr expr_arith
   53           | %empty

   54 multiplicative-expr: term multterms

   55 multterms: MULT term multterms
   56          | DIV term multterms
   57          | MOD term multterms
   58          | %empty

   59 term: SUB termA
   60     | termA
   61     | termB

   62 termA: var
   63      | NUMBER
   64      | L_PAREN expression R_PAREN

   65 termB: IDENT L_PAREN term_param R_PAREN

   66 term_param: expression
   67           | expression COMMA term_param
   68           | %empty

   69 var: IDENT
   70    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 13 63
IDENT (259) 4 9 10 18 65 69 70
FUNCTION (260) 4
BEGIN_PARAMS (261) 4
END_PARAMS (262) 4
BEGIN_LOCALS (263) 4
END_LOCALS (264) 4
BEGIN_BODY (265) 4
END_BODY (266) 4
INTEGER (267) 12 13
ARRAY (268) 13
OF (269) 13
IF (270) 15
THEN (271) 15
ENDIF (272) 23 26
ELSE (273) 25
WHILE (274) 16 17
DO (275) 17
FOREACH (276) 18
IN (277) 18
BEGINLOOP (278) 16 17 18
ENDLOOP (279) 28
CONTINUE (280) 21
READ (281) 19
WRITE (282) 20
AND (283) 36
OR (284) 33
TRUE (285) 41
FALSE (286) 42
RETURN (287) 22
SEMICOLON (288) 4 5 7 15 16 17 24 25 27 29
COLON (289) 11
COMMA (290) 10 31 67
SUB (291) 52 59
ADD (292) 51
MULT (293) 55
DIV (294) 56
MOD (295) 57
EQ (296) 44
NEQ (297) 45
LT (298) 46
GT (299) 47
LTE (300) 48
GTE (301) 49
L_PAREN (302) 43 64 65
R_PAREN (303) 43 64 65
L_SQUARE_BRACKET (304) 13 70
R_SQUARE_BRACKET (305) 13 70
NOT (306) 38
ASSIGN (307) 14


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
begin_program (55)
    on left: 2 3, on right: 1 2
function (56)
    on left: 4, on right: 2
declaration_list (57)
    on left: 5 6, on right: 4 5
statement_list (58)
    on left: 7 8, on right: 4 7
declaration (59)
    on left: 9, on right: 5
ident_list (60)
    on left: 10 11, on right: 9 10
ident_rhs (61)
    on left: 12 13, on right: 11
statement (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 7 15 16 17 24 25
    27 29
if_loop (63)
    on left: 23 24 25, on right: 15 24
ifelse_loop (64)
    on left: 26 27, on right: 25 27
statement_loop (65)
    on left: 28 29, on right: 16 17 18 29
var_list (66)
    on left: 30 31, on right: 19 20 31
bool-expr (67)
    on left: 32, on right: 15 16 17 43
more-bool (68)
    on left: 33 34, on right: 32 33
relation-and-expr (69)
    on left: 35, on right: 32 33
more-expr (70)
    on left: 36 37, on right: 35 36
relation-expr (71)
    on left: 38 39, on right: 35 36
relation-cont (72)
    on left: 40 41 42 43, on right: 38 39
comp (73)
    on left: 44 45 46 47 48 49, on right: 40
expression (74)
    on left: 50, on right: 14 22 40 64 66 67 70
expr_arith (75)
    on left: 51 52 53, on right: 50 51 52
multiplicative-expr (76)
    on left: 54, on right: 50 51 52
multterms (77)
    on left: 55 56 57 58, on right: 54 55 56 57
term (78)
    on left: 59 60 61, on right: 54 55 56 57
termA (79)
    on left: 62 63 64, on right: 59 60
termB (80)
    on left: 65, on right: 61
term_param (81)
    on left: 66 67 68, on right: 65 67
var (82)
    on left: 69 70, on right: 14 30 31 62


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (begin_program)

    program        go to state 2
    begin_program  go to state 3
    function       go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: begin_program .

    $default  reduce using rule 1 (program)


State 4

    2 begin_program: function . begin_program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (begin_program)

    begin_program  go to state 7
    function       go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 begin_program: function begin_program .

    $default  reduce using rule 2 (begin_program)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declaration_list)

    declaration_list  go to state 11
    declaration       go to state 12


State 10

    9 declaration: IDENT . ident_list

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14

    ident_list  go to state 15


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list . END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    5 declaration_list: declaration . SEMICOLON declaration_list

    SEMICOLON  shift, and go to state 17


State 13

   11 ident_list: COLON . ident_rhs

    INTEGER  shift, and go to state 18
    ARRAY    shift, and go to state 19

    ident_rhs  go to state 20


State 14

   10 ident_list: COMMA . IDENT ident_list

    IDENT  shift, and go to state 21


State 15

    9 declaration: IDENT ident_list .

    $default  reduce using rule 9 (declaration)


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS . BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 17

    5 declaration_list: declaration SEMICOLON . declaration_list

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declaration_list)

    declaration_list  go to state 23
    declaration       go to state 12


State 18

   12 ident_rhs: INTEGER .

    $default  reduce using rule 12 (ident_rhs)


State 19

   13 ident_rhs: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 20

   11 ident_list: COLON ident_rhs .

    $default  reduce using rule 11 (ident_list)


State 21

   10 ident_list: COMMA IDENT . ident_list

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14

    ident_list  go to state 25


State 22

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS . declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declaration_list)

    declaration_list  go to state 26
    declaration       go to state 12


State 23

    5 declaration_list: declaration SEMICOLON declaration_list .

    $default  reduce using rule 5 (declaration_list)


State 24

   13 ident_rhs: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 25

   10 ident_list: COMMA IDENT ident_list .

    $default  reduce using rule 10 (ident_list)


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list . END_LOCALS BEGIN_BODY statement_list END_BODY

    END_LOCALS  shift, and go to state 28


State 27

   13 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS . BEGIN_BODY statement_list END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

   13 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 31


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY . statement_list END_BODY

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 8 (statement_list)

    statement_list  go to state 41
    statement       go to state 42
    var             go to state 43


State 31

   13 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 44


State 32

   69 var: IDENT .
   70    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 45

    $default  reduce using rule 69 (var)


State 33

   15 statement: IF . bool-expr THEN statement SEMICOLON if_loop

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52

    bool-expr            go to state 53
    relation-and-expr    go to state 54
    relation-expr        go to state 55
    relation-cont        go to state 56
    expression           go to state 57
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 34

   16 statement: WHILE . bool-expr BEGINLOOP statement SEMICOLON statement_loop

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52

    bool-expr            go to state 63
    relation-and-expr    go to state 54
    relation-expr        go to state 55
    relation-cont        go to state 56
    expression           go to state 57
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 35

   17 statement: DO . BEGINLOOP statement SEMICOLON statement_loop WHILE bool-expr

    BEGINLOOP  shift, and go to state 64


State 36

   18 statement: FOREACH . IDENT IN IDENT BEGINLOOP statement_loop

    IDENT  shift, and go to state 65


State 37

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 38

   19 statement: READ . var_list

    IDENT  shift, and go to state 32

    var_list  go to state 66
    var       go to state 67


State 39

   20 statement: WRITE . var_list

    IDENT  shift, and go to state 32

    var_list  go to state 68
    var       go to state 67


State 40

   22 statement: RETURN . expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    expression           go to state 70
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 41

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list . END_BODY

    END_BODY  shift, and go to state 71


State 42

    7 statement_list: statement . SEMICOLON statement_list

    SEMICOLON  shift, and go to state 72


State 43

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 73


State 44

   13 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (ident_rhs)


State 45

   70 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    expression           go to state 74
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 46

   63 termA: NUMBER .

    $default  reduce using rule 63 (termA)


State 47

   65 termB: IDENT . L_PAREN term_param R_PAREN
   69 var: IDENT .
   70    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 75
    L_SQUARE_BRACKET  shift, and go to state 45

    $default  reduce using rule 69 (var)


State 48

   41 relation-cont: TRUE .

    $default  reduce using rule 41 (relation-cont)


State 49

   42 relation-cont: FALSE .

    $default  reduce using rule 42 (relation-cont)


State 50

   59 term: SUB . termA

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 32
    L_PAREN  shift, and go to state 69

    termA  go to state 76
    var    go to state 62


State 51

   43 relation-cont: L_PAREN . bool-expr R_PAREN
   64 termA: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52

    bool-expr            go to state 77
    relation-and-expr    go to state 54
    relation-expr        go to state 55
    relation-cont        go to state 56
    expression           go to state 78
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 52

   38 relation-expr: NOT . relation-cont

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51

    relation-cont        go to state 79
    expression           go to state 57
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 53

   15 statement: IF bool-expr . THEN statement SEMICOLON if_loop

    THEN  shift, and go to state 80


State 54

   32 bool-expr: relation-and-expr . more-bool

    OR  shift, and go to state 81

    $default  reduce using rule 34 (more-bool)

    more-bool  go to state 82


State 55

   35 relation-and-expr: relation-expr . more-expr

    AND  shift, and go to state 83

    $default  reduce using rule 37 (more-expr)

    more-expr  go to state 84


State 56

   39 relation-expr: relation-cont .

    $default  reduce using rule 39 (relation-expr)


State 57

   40 relation-cont: expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 91


State 58

   50 expression: multiplicative-expr . expr_arith

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 53 (expr_arith)

    expr_arith  go to state 94


State 59

   54 multiplicative-expr: term . multterms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 58 (multterms)

    multterms  go to state 98


State 60

   60 term: termA .

    $default  reduce using rule 60 (term)


State 61

   61 term: termB .

    $default  reduce using rule 61 (term)


State 62

   62 termA: var .

    $default  reduce using rule 62 (termA)


State 63

   16 statement: WHILE bool-expr . BEGINLOOP statement SEMICOLON statement_loop

    BEGINLOOP  shift, and go to state 99


State 64

   17 statement: DO BEGINLOOP . statement SEMICOLON statement_loop WHILE bool-expr

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement  go to state 100
    var        go to state 43


State 65

   18 statement: FOREACH IDENT . IN IDENT BEGINLOOP statement_loop

    IN  shift, and go to state 101


State 66

   19 statement: READ var_list .

    $default  reduce using rule 19 (statement)


State 67

   30 var_list: var .
   31         | var . COMMA var_list

    COMMA  shift, and go to state 102

    $default  reduce using rule 30 (var_list)


State 68

   20 statement: WRITE var_list .

    $default  reduce using rule 20 (statement)


State 69

   64 termA: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    expression           go to state 103
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 70

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 71

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_list END_PARAMS BEGIN_LOCALS declaration_list END_LOCALS BEGIN_BODY statement_list END_BODY .

    $default  reduce using rule 4 (function)


State 72

    7 statement_list: statement SEMICOLON . statement_list

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 8 (statement_list)

    statement_list  go to state 104
    statement       go to state 42
    var             go to state 43


State 73

   14 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    expression           go to state 105
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 74

   70 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 106


State 75

   65 termB: IDENT L_PAREN . term_param R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    $default  reduce using rule 68 (term_param)

    expression           go to state 107
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    term_param           go to state 108
    var                  go to state 62


State 76

   59 term: SUB termA .

    $default  reduce using rule 59 (term)


State 77

   43 relation-cont: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 109


State 78

   40 relation-cont: expression . comp expression
   64 termA: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90
    R_PAREN  shift, and go to state 110

    comp  go to state 91


State 79

   38 relation-expr: NOT relation-cont .

    $default  reduce using rule 38 (relation-expr)


State 80

   15 statement: IF bool-expr THEN . statement SEMICOLON if_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement  go to state 111
    var        go to state 43


State 81

   33 more-bool: OR . relation-and-expr more-bool

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52

    relation-and-expr    go to state 112
    relation-expr        go to state 55
    relation-cont        go to state 56
    expression           go to state 57
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 82

   32 bool-expr: relation-and-expr more-bool .

    $default  reduce using rule 32 (bool-expr)


State 83

   36 more-expr: AND . relation-expr more-expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52

    relation-expr        go to state 113
    relation-cont        go to state 56
    expression           go to state 57
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 84

   35 relation-and-expr: relation-expr more-expr .

    $default  reduce using rule 35 (relation-and-expr)


State 85

   44 comp: EQ .

    $default  reduce using rule 44 (comp)


State 86

   45 comp: NEQ .

    $default  reduce using rule 45 (comp)


State 87

   46 comp: LT .

    $default  reduce using rule 46 (comp)


State 88

   47 comp: GT .

    $default  reduce using rule 47 (comp)


State 89

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 90

   49 comp: GTE .

    $default  reduce using rule 49 (comp)


State 91

   40 relation-cont: expression comp . expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    expression           go to state 114
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 92

   52 expr_arith: SUB . multiplicative-expr expr_arith

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    multiplicative-expr  go to state 115
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 93

   51 expr_arith: ADD . multiplicative-expr expr_arith

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    multiplicative-expr  go to state 116
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 94

   50 expression: multiplicative-expr expr_arith .

    $default  reduce using rule 50 (expression)


State 95

   55 multterms: MULT . term multterms

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    term   go to state 117
    termA  go to state 60
    termB  go to state 61
    var    go to state 62


State 96

   56 multterms: DIV . term multterms

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    term   go to state 118
    termA  go to state 60
    termB  go to state 61
    var    go to state 62


State 97

   57 multterms: MOD . term multterms

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    term   go to state 119
    termA  go to state 60
    termB  go to state 61
    var    go to state 62


State 98

   54 multiplicative-expr: term multterms .

    $default  reduce using rule 54 (multiplicative-expr)


State 99

   16 statement: WHILE bool-expr BEGINLOOP . statement SEMICOLON statement_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement  go to state 120
    var        go to state 43


State 100

   17 statement: DO BEGINLOOP statement . SEMICOLON statement_loop WHILE bool-expr

    SEMICOLON  shift, and go to state 121


State 101

   18 statement: FOREACH IDENT IN . IDENT BEGINLOOP statement_loop

    IDENT  shift, and go to state 122


State 102

   31 var_list: var COMMA . var_list

    IDENT  shift, and go to state 32

    var_list  go to state 123
    var       go to state 67


State 103

   64 termA: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


State 104

    7 statement_list: statement SEMICOLON statement_list .

    $default  reduce using rule 7 (statement_list)


State 105

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 106

   70 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 70 (var)


State 107

   66 term_param: expression .
   67           | expression . COMMA term_param

    COMMA  shift, and go to state 124

    $default  reduce using rule 66 (term_param)


State 108

   65 termB: IDENT L_PAREN term_param . R_PAREN

    R_PAREN  shift, and go to state 125


State 109

   43 relation-cont: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 43 (relation-cont)


State 110

   64 termA: L_PAREN expression R_PAREN .

    $default  reduce using rule 64 (termA)


State 111

   15 statement: IF bool-expr THEN statement . SEMICOLON if_loop

    SEMICOLON  shift, and go to state 126


State 112

   33 more-bool: OR relation-and-expr . more-bool

    OR  shift, and go to state 81

    $default  reduce using rule 34 (more-bool)

    more-bool  go to state 127


State 113

   36 more-expr: AND relation-expr . more-expr

    AND  shift, and go to state 83

    $default  reduce using rule 37 (more-expr)

    more-expr  go to state 128


State 114

   40 relation-cont: expression comp expression .

    $default  reduce using rule 40 (relation-cont)


State 115

   52 expr_arith: SUB multiplicative-expr . expr_arith

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 53 (expr_arith)

    expr_arith  go to state 129


State 116

   51 expr_arith: ADD multiplicative-expr . expr_arith

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 53 (expr_arith)

    expr_arith  go to state 130


State 117

   55 multterms: MULT term . multterms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 58 (multterms)

    multterms  go to state 131


State 118

   56 multterms: DIV term . multterms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 58 (multterms)

    multterms  go to state 132


State 119

   57 multterms: MOD term . multterms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 58 (multterms)

    multterms  go to state 133


State 120

   16 statement: WHILE bool-expr BEGINLOOP statement . SEMICOLON statement_loop

    SEMICOLON  shift, and go to state 134


State 121

   17 statement: DO BEGINLOOP statement SEMICOLON . statement_loop WHILE bool-expr

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    ENDLOOP   shift, and go to state 135
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement       go to state 136
    statement_loop  go to state 137
    var             go to state 43


State 122

   18 statement: FOREACH IDENT IN IDENT . BEGINLOOP statement_loop

    BEGINLOOP  shift, and go to state 138


State 123

   31 var_list: var COMMA var_list .

    $default  reduce using rule 31 (var_list)


State 124

   67 term_param: expression COMMA . term_param

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 69

    $default  reduce using rule 68 (term_param)

    expression           go to state 107
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    term_param           go to state 139
    var                  go to state 62


State 125

   65 termB: IDENT L_PAREN term_param R_PAREN .

    $default  reduce using rule 65 (termB)


State 126

   15 statement: IF bool-expr THEN statement SEMICOLON . if_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 140
    ELSE      shift, and go to state 141
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement  go to state 142
    if_loop    go to state 143
    var        go to state 43


State 127

   33 more-bool: OR relation-and-expr more-bool .

    $default  reduce using rule 33 (more-bool)


State 128

   36 more-expr: AND relation-expr more-expr .

    $default  reduce using rule 36 (more-expr)


State 129

   52 expr_arith: SUB multiplicative-expr expr_arith .

    $default  reduce using rule 52 (expr_arith)


State 130

   51 expr_arith: ADD multiplicative-expr expr_arith .

    $default  reduce using rule 51 (expr_arith)


State 131

   55 multterms: MULT term multterms .

    $default  reduce using rule 55 (multterms)


State 132

   56 multterms: DIV term multterms .

    $default  reduce using rule 56 (multterms)


State 133

   57 multterms: MOD term multterms .

    $default  reduce using rule 57 (multterms)


State 134

   16 statement: WHILE bool-expr BEGINLOOP statement SEMICOLON . statement_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    ENDLOOP   shift, and go to state 135
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement       go to state 136
    statement_loop  go to state 144
    var             go to state 43


State 135

   28 statement_loop: ENDLOOP .

    $default  reduce using rule 28 (statement_loop)


State 136

   29 statement_loop: statement . SEMICOLON statement_loop

    SEMICOLON  shift, and go to state 145


State 137

   17 statement: DO BEGINLOOP statement SEMICOLON statement_loop . WHILE bool-expr

    WHILE  shift, and go to state 146


State 138

   18 statement: FOREACH IDENT IN IDENT BEGINLOOP . statement_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    ENDLOOP   shift, and go to state 135
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement       go to state 136
    statement_loop  go to state 147
    var             go to state 43


State 139

   67 term_param: expression COMMA term_param .

    $default  reduce using rule 67 (term_param)


State 140

   23 if_loop: ENDIF .

    $default  reduce using rule 23 (if_loop)


State 141

   25 if_loop: ELSE . statement SEMICOLON ifelse_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement  go to state 148
    var        go to state 43


State 142

   24 if_loop: statement . SEMICOLON if_loop

    SEMICOLON  shift, and go to state 149


State 143

   15 statement: IF bool-expr THEN statement SEMICOLON if_loop .

    $default  reduce using rule 15 (statement)


State 144

   16 statement: WHILE bool-expr BEGINLOOP statement SEMICOLON statement_loop .

    $default  reduce using rule 16 (statement)


State 145

   29 statement_loop: statement SEMICOLON . statement_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    ENDLOOP   shift, and go to state 135
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement       go to state 136
    statement_loop  go to state 150
    var             go to state 43


State 146

   17 statement: DO BEGINLOOP statement SEMICOLON statement_loop WHILE . bool-expr

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NOT      shift, and go to state 52

    bool-expr            go to state 151
    relation-and-expr    go to state 54
    relation-expr        go to state 55
    relation-cont        go to state 56
    expression           go to state 57
    multiplicative-expr  go to state 58
    term                 go to state 59
    termA                go to state 60
    termB                go to state 61
    var                  go to state 62


State 147

   18 statement: FOREACH IDENT IN IDENT BEGINLOOP statement_loop .

    $default  reduce using rule 18 (statement)


State 148

   25 if_loop: ELSE statement . SEMICOLON ifelse_loop

    SEMICOLON  shift, and go to state 152


State 149

   24 if_loop: statement SEMICOLON . if_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 140
    ELSE      shift, and go to state 141
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement  go to state 142
    if_loop    go to state 153
    var        go to state 43


State 150

   29 statement_loop: statement SEMICOLON statement_loop .

    $default  reduce using rule 29 (statement_loop)


State 151

   17 statement: DO BEGINLOOP statement SEMICOLON statement_loop WHILE bool-expr .

    $default  reduce using rule 17 (statement)


State 152

   25 if_loop: ELSE statement SEMICOLON . ifelse_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 154
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement    go to state 155
    ifelse_loop  go to state 156
    var          go to state 43


State 153

   24 if_loop: statement SEMICOLON if_loop .

    $default  reduce using rule 24 (if_loop)


State 154

   26 ifelse_loop: ENDIF .

    $default  reduce using rule 26 (ifelse_loop)


State 155

   27 ifelse_loop: statement . SEMICOLON ifelse_loop

    SEMICOLON  shift, and go to state 157


State 156

   25 if_loop: ELSE statement SEMICOLON ifelse_loop .

    $default  reduce using rule 25 (if_loop)


State 157

   27 ifelse_loop: statement SEMICOLON . ifelse_loop

    IDENT     shift, and go to state 32
    IF        shift, and go to state 33
    ENDIF     shift, and go to state 154
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    statement    go to state 155
    ifelse_loop  go to state 158
    var          go to state 43


State 158

   27 ifelse_loop: statement SEMICOLON ifelse_loop .

    $default  reduce using rule 27 (ifelse_loop)
