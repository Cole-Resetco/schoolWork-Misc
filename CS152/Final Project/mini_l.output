Grammar

    0 $accept: program $end

    1 program: begin_program

    2 begin_program: function begin_program
    3              | %empty

    4 $@1: %empty

    5 $@2: %empty

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    7 declaration_call: declaration SEMICOLON declaration_call
    8                 | %empty

    9 statement_call: statement SEMICOLON statement_call
   10               | %empty

   11 $@3: %empty

   12 declaration: IDENT ident_call $@3

   13 $@4: %empty

   14 ident_call: COMMA IDENT ident_call $@4
   15           | COLON ident_rhs

   16 ident_rhs: INTEGER
   17          | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   18 $@5: %empty

   19 statement: var ASSIGN expression $@5

   20 @6: %empty

   21 statement: IF bool-expr @6 THEN statement SEMICOLON if_loop
   22          | WHILE bool-expr BEGINLOOP statement SEMICOLON statement_loop
   23          | DO BEGINLOOP statement SEMICOLON statement_loop WHILE bool-expr
   24          | FOREACH IDENT IN IDENT BEGINLOOP statement_loop

   25 $@7: %empty

   26 statement: READ var_call $@7

   27 $@8: %empty

   28 statement: WRITE var_call $@8
   29          | CONTINUE
   30          | RETURN expression

   31 if_loop: ENDIF
   32        | statement SEMICOLON if_loop
   33        | ELSE statement SEMICOLON ifelse_loop

   34 ifelse_loop: ENDIF
   35            | statement SEMICOLON ifelse_loop

   36 statement_loop: ENDLOOP
   37               | statement SEMICOLON statement_loop

   38 var_call: var
   39         | var COMMA var_call

   40 @9: %empty

   41 bool-expr: relation-and-expr @9 more-bool

   42 @10: %empty

   43 more-bool: OR relation-and-expr @10 more-bool
   44          | %empty

   45 @11: %empty

   46 relation-and-expr: relation-expr @11 more-expr

   47 @12: %empty

   48 more-expr: AND relation-expr @12 more-expr
   49          | %empty

   50 @13: %empty

   51 relation-expr: NOT relation-rhs @13
   52              | relation-rhs

   53 @14: %empty

   54 relation-rhs: expression comp expression @14

   55 @15: %empty

   56 relation-rhs: TRUE @15

   57 @16: %empty

   58 relation-rhs: FALSE @16

   59 @17: %empty

   60 relation-rhs: L_PAREN bool-expr R_PAREN @17

   61 @18: %empty

   62 comp: EQ @18

   63 @19: %empty

   64 comp: NEQ @19

   65 @20: %empty

   66 comp: LT @20

   67 @21: %empty

   68 comp: GT @21

   69 @22: %empty

   70 comp: LTE @22

   71 @23: %empty

   72 comp: GTE @23

   73 expression: multiplicative-expr expr_arith

   74 @24: %empty

   75 @25: %empty

   76 expr_arith: ADD multiplicative-expr @24 expr_arith @25

   77 @26: %empty

   78 @27: %empty

   79 expr_arith: SUB multiplicative-expr @26 expr_arith @27
   80           | %empty

   81 @28: %empty

   82 multiplicative-expr: term multterms @28

   83 @29: %empty

   84 multterms: MULT term multterms @29

   85 @30: %empty

   86 multterms: DIV term multterms @30

   87 @31: %empty

   88 multterms: MOD term multterms @31
   89          | %empty

   90 @32: %empty

   91 term: SUB termA @32

   92 @33: %empty

   93 term: termA @33

   94 @34: %empty

   95 term: termB @34

   96 @35: %empty

   97 termA: var @35

   98 @36: %empty

   99 termA: NUMBER @36

  100 @37: %empty

  101 termA: L_PAREN expression R_PAREN @37

  102 @38: %empty

  103 termB: IDENT L_PAREN term_param R_PAREN @38

  104 term_param: expression
  105           | expression COMMA term_param
  106           | %empty

  107 @39: %empty

  108 var: IDENT @39

  109 @40: %empty

  110 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET @40


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 17 99
IDENT (259) 6 12 14 24 103 108 110
FUNCTION (260) 6
BEGIN_PARAMS (261) 6
END_PARAMS (262) 6
BEGIN_LOCALS (263) 6
END_LOCALS (264) 6
BEGIN_BODY (265) 6
END_BODY (266) 6
INTEGER (267) 16 17
ARRAY (268) 17
OF (269) 17
IF (270) 21
THEN (271) 21
ENDIF (272) 31 34
ELSE (273) 33
WHILE (274) 22 23
DO (275) 23
FOREACH (276) 24
IN (277) 24
BEGINLOOP (278) 22 23 24
ENDLOOP (279) 36
CONTINUE (280) 29
READ (281) 26
WRITE (282) 28
AND (283) 48
OR (284) 43
TRUE (285) 56
FALSE (286) 58
RETURN (287) 30
SEMICOLON (288) 6 7 9 21 22 23 32 33 35 37
COLON (289) 15
COMMA (290) 14 39 105
SUB (291) 79 91
ADD (292) 76
MULT (293) 84
DIV (294) 86
MOD (295) 88
EQ (296) 62
NEQ (297) 64
LT (298) 66
GT (299) 68
LTE (300) 70
GTE (301) 72
L_PAREN (302) 60 101 103
R_PAREN (303) 60 101 103
L_SQUARE_BRACKET (304) 17 110
R_SQUARE_BRACKET (305) 17 110
NOT (306) 51
ASSIGN (307) 19


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
begin_program (55)
    on left: 2 3, on right: 1 2
function (56)
    on left: 6, on right: 2
$@1 (57)
    on left: 4, on right: 6
$@2 (58)
    on left: 5, on right: 6
declaration_call (59)
    on left: 7 8, on right: 6 7
statement_call (60)
    on left: 9 10, on right: 6 9
declaration (61)
    on left: 12, on right: 7
$@3 (62)
    on left: 11, on right: 12
ident_call (63)
    on left: 14 15, on right: 12 14
$@4 (64)
    on left: 13, on right: 14
ident_rhs (65)
    on left: 16 17, on right: 15
statement (66)
    on left: 19 21 22 23 24 26 28 29 30, on right: 9 21 22 23 32 33
    35 37
$@5 (67)
    on left: 18, on right: 19
@6 (68)
    on left: 20, on right: 21
$@7 (69)
    on left: 25, on right: 26
$@8 (70)
    on left: 27, on right: 28
if_loop (71)
    on left: 31 32 33, on right: 21 32
ifelse_loop (72)
    on left: 34 35, on right: 33 35
statement_loop (73)
    on left: 36 37, on right: 22 23 24 37
var_call (74)
    on left: 38 39, on right: 26 28 39
bool-expr (75)
    on left: 41, on right: 21 22 23 60
@9 (76)
    on left: 40, on right: 41
more-bool (77)
    on left: 43 44, on right: 41 43
@10 (78)
    on left: 42, on right: 43
relation-and-expr (79)
    on left: 46, on right: 41 43
@11 (80)
    on left: 45, on right: 46
more-expr (81)
    on left: 48 49, on right: 46 48
@12 (82)
    on left: 47, on right: 48
relation-expr (83)
    on left: 51 52, on right: 46 48
@13 (84)
    on left: 50, on right: 51
relation-rhs (85)
    on left: 54 56 58 60, on right: 51 52
@14 (86)
    on left: 53, on right: 54
@15 (87)
    on left: 55, on right: 56
@16 (88)
    on left: 57, on right: 58
@17 (89)
    on left: 59, on right: 60
comp (90)
    on left: 62 64 66 68 70 72, on right: 54
@18 (91)
    on left: 61, on right: 62
@19 (92)
    on left: 63, on right: 64
@20 (93)
    on left: 65, on right: 66
@21 (94)
    on left: 67, on right: 68
@22 (95)
    on left: 69, on right: 70
@23 (96)
    on left: 71, on right: 72
expression (97)
    on left: 73, on right: 19 30 54 101 104 105 110
expr_arith (98)
    on left: 76 79 80, on right: 73 76 79
@24 (99)
    on left: 74, on right: 76
@25 (100)
    on left: 75, on right: 76
@26 (101)
    on left: 77, on right: 79
@27 (102)
    on left: 78, on right: 79
multiplicative-expr (103)
    on left: 82, on right: 73 76 79
@28 (104)
    on left: 81, on right: 82
multterms (105)
    on left: 84 86 88 89, on right: 82 84 86 88
@29 (106)
    on left: 83, on right: 84
@30 (107)
    on left: 85, on right: 86
@31 (108)
    on left: 87, on right: 88
term (109)
    on left: 91 93 95, on right: 82 84 86 88
@32 (110)
    on left: 90, on right: 91
@33 (111)
    on left: 92, on right: 93
@34 (112)
    on left: 94, on right: 95
termA (113)
    on left: 97 99 101, on right: 91 93
@35 (114)
    on left: 96, on right: 97
@36 (115)
    on left: 98, on right: 99
@37 (116)
    on left: 100, on right: 101
termB (117)
    on left: 103, on right: 95
@38 (118)
    on left: 102, on right: 103
term_param (119)
    on left: 104 105 106, on right: 103 105
var (120)
    on left: 108 110, on right: 19 38 39 97
@39 (121)
    on left: 107, on right: 108
@40 (122)
    on left: 109, on right: 110


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (begin_program)

    program        go to state 2
    begin_program  go to state 3
    function       go to state 4


State 1

    6 function: FUNCTION . IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: begin_program .

    $default  reduce using rule 1 (program)


State 4

    2 begin_program: function . begin_program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (begin_program)

    begin_program  go to state 7
    function       go to state 4


State 5

    6 function: FUNCTION IDENT . SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 begin_program: function begin_program .

    $default  reduce using rule 2 (begin_program)


State 8

    6 function: FUNCTION IDENT SEMICOLON . $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 function: FUNCTION IDENT SEMICOLON $@1 . BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    BEGIN_PARAMS  shift, and go to state 10


State 10

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS . declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    IDENT  shift, and go to state 11

    $default  reduce using rule 8 (declaration_call)

    declaration_call  go to state 12
    declaration       go to state 13


State 11

   12 declaration: IDENT . ident_call $@3

    COLON  shift, and go to state 14
    COMMA  shift, and go to state 15

    ident_call  go to state 16


State 12

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call . END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    END_PARAMS  shift, and go to state 17


State 13

    7 declaration_call: declaration . SEMICOLON declaration_call

    SEMICOLON  shift, and go to state 18


State 14

   15 ident_call: COLON . ident_rhs

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20

    ident_rhs  go to state 21


State 15

   14 ident_call: COMMA . IDENT ident_call $@4

    IDENT  shift, and go to state 22


State 16

   12 declaration: IDENT ident_call . $@3

    $default  reduce using rule 11 ($@3)

    $@3  go to state 23


State 17

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS . BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    BEGIN_LOCALS  shift, and go to state 24


State 18

    7 declaration_call: declaration SEMICOLON . declaration_call

    IDENT  shift, and go to state 11

    $default  reduce using rule 8 (declaration_call)

    declaration_call  go to state 25
    declaration       go to state 13


State 19

   16 ident_rhs: INTEGER .

    $default  reduce using rule 16 (ident_rhs)


State 20

   17 ident_rhs: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 21

   15 ident_call: COLON ident_rhs .

    $default  reduce using rule 15 (ident_call)


State 22

   14 ident_call: COMMA IDENT . ident_call $@4

    COLON  shift, and go to state 14
    COMMA  shift, and go to state 15

    ident_call  go to state 27


State 23

   12 declaration: IDENT ident_call $@3 .

    $default  reduce using rule 12 (declaration)


State 24

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS . declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    IDENT  shift, and go to state 11

    $default  reduce using rule 8 (declaration_call)

    declaration_call  go to state 28
    declaration       go to state 13


State 25

    7 declaration_call: declaration SEMICOLON declaration_call .

    $default  reduce using rule 7 (declaration_call)


State 26

   17 ident_rhs: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

   14 ident_call: COMMA IDENT ident_call . $@4

    $default  reduce using rule 13 ($@4)

    $@4  go to state 30


State 28

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call . END_LOCALS BEGIN_BODY statement_call END_BODY $@2

    END_LOCALS  shift, and go to state 31


State 29

   17 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

   14 ident_call: COMMA IDENT ident_call $@4 .

    $default  reduce using rule 14 (ident_call)


State 31

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS . BEGIN_BODY statement_call END_BODY $@2

    BEGIN_BODY  shift, and go to state 33


State 32

   17 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 34


State 33

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY . statement_call END_BODY $@2

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 10 (statement_call)

    statement_call  go to state 44
    statement       go to state 45
    var             go to state 46


State 34

   17 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 47


State 35

  108 var: IDENT . @39
  110    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET @40

    L_SQUARE_BRACKET  shift, and go to state 48

    $default  reduce using rule 107 (@39)

    @39  go to state 49


State 36

   21 statement: IF . bool-expr @6 THEN statement SEMICOLON if_loop

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NOT      shift, and go to state 56

    bool-expr            go to state 57
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    relation-rhs         go to state 60
    expression           go to state 61
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 37

   22 statement: WHILE . bool-expr BEGINLOOP statement SEMICOLON statement_loop

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NOT      shift, and go to state 56

    bool-expr            go to state 67
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    relation-rhs         go to state 60
    expression           go to state 61
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 38

   23 statement: DO . BEGINLOOP statement SEMICOLON statement_loop WHILE bool-expr

    BEGINLOOP  shift, and go to state 68


State 39

   24 statement: FOREACH . IDENT IN IDENT BEGINLOOP statement_loop

    IDENT  shift, and go to state 69


State 40

   29 statement: CONTINUE .

    $default  reduce using rule 29 (statement)


State 41

   26 statement: READ . var_call $@7

    IDENT  shift, and go to state 35

    var_call  go to state 70
    var       go to state 71


State 42

   28 statement: WRITE . var_call $@8

    IDENT  shift, and go to state 35

    var_call  go to state 72
    var       go to state 71


State 43

   30 statement: RETURN . expression

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    expression           go to state 74
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 44

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call . END_BODY $@2

    END_BODY  shift, and go to state 75


State 45

    9 statement_call: statement . SEMICOLON statement_call

    SEMICOLON  shift, and go to state 76


State 46

   19 statement: var . ASSIGN expression $@5

    ASSIGN  shift, and go to state 77


State 47

   17 ident_rhs: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 17 (ident_rhs)


State 48

  110 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET @40

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    expression           go to state 78
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 49

  108 var: IDENT @39 .

    $default  reduce using rule 108 (var)


State 50

   99 termA: NUMBER . @36

    $default  reduce using rule 98 (@36)

    @36  go to state 79


State 51

  103 termB: IDENT . L_PAREN term_param R_PAREN @38
  108 var: IDENT . @39
  110    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET @40

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 48

    $default  reduce using rule 107 (@39)

    @39  go to state 49


State 52

   56 relation-rhs: TRUE . @15

    $default  reduce using rule 55 (@15)

    @15  go to state 81


State 53

   58 relation-rhs: FALSE . @16

    $default  reduce using rule 57 (@16)

    @16  go to state 82


State 54

   91 term: SUB . termA @32

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 35
    L_PAREN  shift, and go to state 73

    termA  go to state 83
    var    go to state 66


State 55

   60 relation-rhs: L_PAREN . bool-expr R_PAREN @17
  101 termA: L_PAREN . expression R_PAREN @37

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NOT      shift, and go to state 56

    bool-expr            go to state 84
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    relation-rhs         go to state 60
    expression           go to state 85
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 56

   51 relation-expr: NOT . relation-rhs @13

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 55

    relation-rhs         go to state 86
    expression           go to state 61
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 57

   21 statement: IF bool-expr . @6 THEN statement SEMICOLON if_loop

    $default  reduce using rule 20 (@6)

    @6  go to state 87


State 58

   41 bool-expr: relation-and-expr . @9 more-bool

    $default  reduce using rule 40 (@9)

    @9  go to state 88


State 59

   46 relation-and-expr: relation-expr . @11 more-expr

    $default  reduce using rule 45 (@11)

    @11  go to state 89


State 60

   52 relation-expr: relation-rhs .

    $default  reduce using rule 52 (relation-expr)


State 61

   54 relation-rhs: expression . comp expression @14

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    comp  go to state 96


State 62

   73 expression: multiplicative-expr . expr_arith

    SUB  shift, and go to state 97
    ADD  shift, and go to state 98

    $default  reduce using rule 80 (expr_arith)

    expr_arith  go to state 99


State 63

   82 multiplicative-expr: term . multterms @28

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 89 (multterms)

    multterms  go to state 103


State 64

   93 term: termA . @33

    $default  reduce using rule 92 (@33)

    @33  go to state 104


State 65

   95 term: termB . @34

    $default  reduce using rule 94 (@34)

    @34  go to state 105


State 66

   97 termA: var . @35

    $default  reduce using rule 96 (@35)

    @35  go to state 106


State 67

   22 statement: WHILE bool-expr . BEGINLOOP statement SEMICOLON statement_loop

    BEGINLOOP  shift, and go to state 107


State 68

   23 statement: DO BEGINLOOP . statement SEMICOLON statement_loop WHILE bool-expr

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement  go to state 108
    var        go to state 46


State 69

   24 statement: FOREACH IDENT . IN IDENT BEGINLOOP statement_loop

    IN  shift, and go to state 109


State 70

   26 statement: READ var_call . $@7

    $default  reduce using rule 25 ($@7)

    $@7  go to state 110


State 71

   38 var_call: var .
   39         | var . COMMA var_call

    COMMA  shift, and go to state 111

    $default  reduce using rule 38 (var_call)


State 72

   28 statement: WRITE var_call . $@8

    $default  reduce using rule 27 ($@8)

    $@8  go to state 112


State 73

  101 termA: L_PAREN . expression R_PAREN @37

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    expression           go to state 113
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 74

   30 statement: RETURN expression .

    $default  reduce using rule 30 (statement)


State 75

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 114


State 76

    9 statement_call: statement SEMICOLON . statement_call

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    $default  reduce using rule 10 (statement_call)

    statement_call  go to state 115
    statement       go to state 45
    var             go to state 46


State 77

   19 statement: var ASSIGN . expression $@5

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    expression           go to state 116
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 78

  110 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET @40

    R_SQUARE_BRACKET  shift, and go to state 117


State 79

   99 termA: NUMBER @36 .

    $default  reduce using rule 99 (termA)


State 80

  103 termB: IDENT L_PAREN . term_param R_PAREN @38

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    $default  reduce using rule 106 (term_param)

    expression           go to state 118
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    term_param           go to state 119
    var                  go to state 66


State 81

   56 relation-rhs: TRUE @15 .

    $default  reduce using rule 56 (relation-rhs)


State 82

   58 relation-rhs: FALSE @16 .

    $default  reduce using rule 58 (relation-rhs)


State 83

   91 term: SUB termA . @32

    $default  reduce using rule 90 (@32)

    @32  go to state 120


State 84

   60 relation-rhs: L_PAREN bool-expr . R_PAREN @17

    R_PAREN  shift, and go to state 121


State 85

   54 relation-rhs: expression . comp expression @14
  101 termA: L_PAREN expression . R_PAREN @37

    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91
    LT       shift, and go to state 92
    GT       shift, and go to state 93
    LTE      shift, and go to state 94
    GTE      shift, and go to state 95
    R_PAREN  shift, and go to state 122

    comp  go to state 96


State 86

   51 relation-expr: NOT relation-rhs . @13

    $default  reduce using rule 50 (@13)

    @13  go to state 123


State 87

   21 statement: IF bool-expr @6 . THEN statement SEMICOLON if_loop

    THEN  shift, and go to state 124


State 88

   41 bool-expr: relation-and-expr @9 . more-bool

    OR  shift, and go to state 125

    $default  reduce using rule 44 (more-bool)

    more-bool  go to state 126


State 89

   46 relation-and-expr: relation-expr @11 . more-expr

    AND  shift, and go to state 127

    $default  reduce using rule 49 (more-expr)

    more-expr  go to state 128


State 90

   62 comp: EQ . @18

    $default  reduce using rule 61 (@18)

    @18  go to state 129


State 91

   64 comp: NEQ . @19

    $default  reduce using rule 63 (@19)

    @19  go to state 130


State 92

   66 comp: LT . @20

    $default  reduce using rule 65 (@20)

    @20  go to state 131


State 93

   68 comp: GT . @21

    $default  reduce using rule 67 (@21)

    @21  go to state 132


State 94

   70 comp: LTE . @22

    $default  reduce using rule 69 (@22)

    @22  go to state 133


State 95

   72 comp: GTE . @23

    $default  reduce using rule 71 (@23)

    @23  go to state 134


State 96

   54 relation-rhs: expression comp . expression @14

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    expression           go to state 135
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 97

   79 expr_arith: SUB . multiplicative-expr @26 expr_arith @27

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    multiplicative-expr  go to state 136
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 98

   76 expr_arith: ADD . multiplicative-expr @24 expr_arith @25

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    multiplicative-expr  go to state 137
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 99

   73 expression: multiplicative-expr expr_arith .

    $default  reduce using rule 73 (expression)


State 100

   84 multterms: MULT . term multterms @29

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    term   go to state 138
    termA  go to state 64
    termB  go to state 65
    var    go to state 66


State 101

   86 multterms: DIV . term multterms @30

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    term   go to state 139
    termA  go to state 64
    termB  go to state 65
    var    go to state 66


State 102

   88 multterms: MOD . term multterms @31

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    term   go to state 140
    termA  go to state 64
    termB  go to state 65
    var    go to state 66


State 103

   82 multiplicative-expr: term multterms . @28

    $default  reduce using rule 81 (@28)

    @28  go to state 141


State 104

   93 term: termA @33 .

    $default  reduce using rule 93 (term)


State 105

   95 term: termB @34 .

    $default  reduce using rule 95 (term)


State 106

   97 termA: var @35 .

    $default  reduce using rule 97 (termA)


State 107

   22 statement: WHILE bool-expr BEGINLOOP . statement SEMICOLON statement_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement  go to state 142
    var        go to state 46


State 108

   23 statement: DO BEGINLOOP statement . SEMICOLON statement_loop WHILE bool-expr

    SEMICOLON  shift, and go to state 143


State 109

   24 statement: FOREACH IDENT IN . IDENT BEGINLOOP statement_loop

    IDENT  shift, and go to state 144


State 110

   26 statement: READ var_call $@7 .

    $default  reduce using rule 26 (statement)


State 111

   39 var_call: var COMMA . var_call

    IDENT  shift, and go to state 35

    var_call  go to state 145
    var       go to state 71


State 112

   28 statement: WRITE var_call $@8 .

    $default  reduce using rule 28 (statement)


State 113

  101 termA: L_PAREN expression . R_PAREN @37

    R_PAREN  shift, and go to state 122


State 114

    6 function: FUNCTION IDENT SEMICOLON $@1 BEGIN_PARAMS declaration_call END_PARAMS BEGIN_LOCALS declaration_call END_LOCALS BEGIN_BODY statement_call END_BODY $@2 .

    $default  reduce using rule 6 (function)


State 115

    9 statement_call: statement SEMICOLON statement_call .

    $default  reduce using rule 9 (statement_call)


State 116

   19 statement: var ASSIGN expression . $@5

    $default  reduce using rule 18 ($@5)

    $@5  go to state 146


State 117

  110 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . @40

    $default  reduce using rule 109 (@40)

    @40  go to state 147


State 118

  104 term_param: expression .
  105           | expression . COMMA term_param

    COMMA  shift, and go to state 148

    $default  reduce using rule 104 (term_param)


State 119

  103 termB: IDENT L_PAREN term_param . R_PAREN @38

    R_PAREN  shift, and go to state 149


State 120

   91 term: SUB termA @32 .

    $default  reduce using rule 91 (term)


State 121

   60 relation-rhs: L_PAREN bool-expr R_PAREN . @17

    $default  reduce using rule 59 (@17)

    @17  go to state 150


State 122

  101 termA: L_PAREN expression R_PAREN . @37

    $default  reduce using rule 100 (@37)

    @37  go to state 151


State 123

   51 relation-expr: NOT relation-rhs @13 .

    $default  reduce using rule 51 (relation-expr)


State 124

   21 statement: IF bool-expr @6 THEN . statement SEMICOLON if_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement  go to state 152
    var        go to state 46


State 125

   43 more-bool: OR . relation-and-expr @10 more-bool

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NOT      shift, and go to state 56

    relation-and-expr    go to state 153
    relation-expr        go to state 59
    relation-rhs         go to state 60
    expression           go to state 61
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 126

   41 bool-expr: relation-and-expr @9 more-bool .

    $default  reduce using rule 41 (bool-expr)


State 127

   48 more-expr: AND . relation-expr @12 more-expr

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NOT      shift, and go to state 56

    relation-expr        go to state 154
    relation-rhs         go to state 60
    expression           go to state 61
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 128

   46 relation-and-expr: relation-expr @11 more-expr .

    $default  reduce using rule 46 (relation-and-expr)


State 129

   62 comp: EQ @18 .

    $default  reduce using rule 62 (comp)


State 130

   64 comp: NEQ @19 .

    $default  reduce using rule 64 (comp)


State 131

   66 comp: LT @20 .

    $default  reduce using rule 66 (comp)


State 132

   68 comp: GT @21 .

    $default  reduce using rule 68 (comp)


State 133

   70 comp: LTE @22 .

    $default  reduce using rule 70 (comp)


State 134

   72 comp: GTE @23 .

    $default  reduce using rule 72 (comp)


State 135

   54 relation-rhs: expression comp expression . @14

    $default  reduce using rule 53 (@14)

    @14  go to state 155


State 136

   79 expr_arith: SUB multiplicative-expr . @26 expr_arith @27

    $default  reduce using rule 77 (@26)

    @26  go to state 156


State 137

   76 expr_arith: ADD multiplicative-expr . @24 expr_arith @25

    $default  reduce using rule 74 (@24)

    @24  go to state 157


State 138

   84 multterms: MULT term . multterms @29

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 89 (multterms)

    multterms  go to state 158


State 139

   86 multterms: DIV term . multterms @30

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 89 (multterms)

    multterms  go to state 159


State 140

   88 multterms: MOD term . multterms @31

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 89 (multterms)

    multterms  go to state 160


State 141

   82 multiplicative-expr: term multterms @28 .

    $default  reduce using rule 82 (multiplicative-expr)


State 142

   22 statement: WHILE bool-expr BEGINLOOP statement . SEMICOLON statement_loop

    SEMICOLON  shift, and go to state 161


State 143

   23 statement: DO BEGINLOOP statement SEMICOLON . statement_loop WHILE bool-expr

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    ENDLOOP   shift, and go to state 162
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement       go to state 163
    statement_loop  go to state 164
    var             go to state 46


State 144

   24 statement: FOREACH IDENT IN IDENT . BEGINLOOP statement_loop

    BEGINLOOP  shift, and go to state 165


State 145

   39 var_call: var COMMA var_call .

    $default  reduce using rule 39 (var_call)


State 146

   19 statement: var ASSIGN expression $@5 .

    $default  reduce using rule 19 (statement)


State 147

  110 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET @40 .

    $default  reduce using rule 110 (var)


State 148

  105 term_param: expression COMMA . term_param

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 73

    $default  reduce using rule 106 (term_param)

    expression           go to state 118
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    term_param           go to state 166
    var                  go to state 66


State 149

  103 termB: IDENT L_PAREN term_param R_PAREN . @38

    $default  reduce using rule 102 (@38)

    @38  go to state 167


State 150

   60 relation-rhs: L_PAREN bool-expr R_PAREN @17 .

    $default  reduce using rule 60 (relation-rhs)


State 151

  101 termA: L_PAREN expression R_PAREN @37 .

    $default  reduce using rule 101 (termA)


State 152

   21 statement: IF bool-expr @6 THEN statement . SEMICOLON if_loop

    SEMICOLON  shift, and go to state 168


State 153

   43 more-bool: OR relation-and-expr . @10 more-bool

    $default  reduce using rule 42 (@10)

    @10  go to state 169


State 154

   48 more-expr: AND relation-expr . @12 more-expr

    $default  reduce using rule 47 (@12)

    @12  go to state 170


State 155

   54 relation-rhs: expression comp expression @14 .

    $default  reduce using rule 54 (relation-rhs)


State 156

   79 expr_arith: SUB multiplicative-expr @26 . expr_arith @27

    SUB  shift, and go to state 97
    ADD  shift, and go to state 98

    $default  reduce using rule 80 (expr_arith)

    expr_arith  go to state 171


State 157

   76 expr_arith: ADD multiplicative-expr @24 . expr_arith @25

    SUB  shift, and go to state 97
    ADD  shift, and go to state 98

    $default  reduce using rule 80 (expr_arith)

    expr_arith  go to state 172


State 158

   84 multterms: MULT term multterms . @29

    $default  reduce using rule 83 (@29)

    @29  go to state 173


State 159

   86 multterms: DIV term multterms . @30

    $default  reduce using rule 85 (@30)

    @30  go to state 174


State 160

   88 multterms: MOD term multterms . @31

    $default  reduce using rule 87 (@31)

    @31  go to state 175


State 161

   22 statement: WHILE bool-expr BEGINLOOP statement SEMICOLON . statement_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    ENDLOOP   shift, and go to state 162
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement       go to state 163
    statement_loop  go to state 176
    var             go to state 46


State 162

   36 statement_loop: ENDLOOP .

    $default  reduce using rule 36 (statement_loop)


State 163

   37 statement_loop: statement . SEMICOLON statement_loop

    SEMICOLON  shift, and go to state 177


State 164

   23 statement: DO BEGINLOOP statement SEMICOLON statement_loop . WHILE bool-expr

    WHILE  shift, and go to state 178


State 165

   24 statement: FOREACH IDENT IN IDENT BEGINLOOP . statement_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    ENDLOOP   shift, and go to state 162
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement       go to state 163
    statement_loop  go to state 179
    var             go to state 46


State 166

  105 term_param: expression COMMA term_param .

    $default  reduce using rule 105 (term_param)


State 167

  103 termB: IDENT L_PAREN term_param R_PAREN @38 .

    $default  reduce using rule 103 (termB)


State 168

   21 statement: IF bool-expr @6 THEN statement SEMICOLON . if_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    ENDIF     shift, and go to state 180
    ELSE      shift, and go to state 181
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement  go to state 182
    if_loop    go to state 183
    var        go to state 46


State 169

   43 more-bool: OR relation-and-expr @10 . more-bool

    OR  shift, and go to state 125

    $default  reduce using rule 44 (more-bool)

    more-bool  go to state 184


State 170

   48 more-expr: AND relation-expr @12 . more-expr

    AND  shift, and go to state 127

    $default  reduce using rule 49 (more-expr)

    more-expr  go to state 185


State 171

   79 expr_arith: SUB multiplicative-expr @26 expr_arith . @27

    $default  reduce using rule 78 (@27)

    @27  go to state 186


State 172

   76 expr_arith: ADD multiplicative-expr @24 expr_arith . @25

    $default  reduce using rule 75 (@25)

    @25  go to state 187


State 173

   84 multterms: MULT term multterms @29 .

    $default  reduce using rule 84 (multterms)


State 174

   86 multterms: DIV term multterms @30 .

    $default  reduce using rule 86 (multterms)


State 175

   88 multterms: MOD term multterms @31 .

    $default  reduce using rule 88 (multterms)


State 176

   22 statement: WHILE bool-expr BEGINLOOP statement SEMICOLON statement_loop .

    $default  reduce using rule 22 (statement)


State 177

   37 statement_loop: statement SEMICOLON . statement_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    ENDLOOP   shift, and go to state 162
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement       go to state 163
    statement_loop  go to state 188
    var             go to state 46


State 178

   23 statement: DO BEGINLOOP statement SEMICOLON statement_loop WHILE . bool-expr

    NUMBER   shift, and go to state 50
    IDENT    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NOT      shift, and go to state 56

    bool-expr            go to state 189
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    relation-rhs         go to state 60
    expression           go to state 61
    multiplicative-expr  go to state 62
    term                 go to state 63
    termA                go to state 64
    termB                go to state 65
    var                  go to state 66


State 179

   24 statement: FOREACH IDENT IN IDENT BEGINLOOP statement_loop .

    $default  reduce using rule 24 (statement)


State 180

   31 if_loop: ENDIF .

    $default  reduce using rule 31 (if_loop)


State 181

   33 if_loop: ELSE . statement SEMICOLON ifelse_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement  go to state 190
    var        go to state 46


State 182

   32 if_loop: statement . SEMICOLON if_loop

    SEMICOLON  shift, and go to state 191


State 183

   21 statement: IF bool-expr @6 THEN statement SEMICOLON if_loop .

    $default  reduce using rule 21 (statement)


State 184

   43 more-bool: OR relation-and-expr @10 more-bool .

    $default  reduce using rule 43 (more-bool)


State 185

   48 more-expr: AND relation-expr @12 more-expr .

    $default  reduce using rule 48 (more-expr)


State 186

   79 expr_arith: SUB multiplicative-expr @26 expr_arith @27 .

    $default  reduce using rule 79 (expr_arith)


State 187

   76 expr_arith: ADD multiplicative-expr @24 expr_arith @25 .

    $default  reduce using rule 76 (expr_arith)


State 188

   37 statement_loop: statement SEMICOLON statement_loop .

    $default  reduce using rule 37 (statement_loop)


State 189

   23 statement: DO BEGINLOOP statement SEMICOLON statement_loop WHILE bool-expr .

    $default  reduce using rule 23 (statement)


State 190

   33 if_loop: ELSE statement . SEMICOLON ifelse_loop

    SEMICOLON  shift, and go to state 192


State 191

   32 if_loop: statement SEMICOLON . if_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    ENDIF     shift, and go to state 180
    ELSE      shift, and go to state 181
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement  go to state 182
    if_loop    go to state 193
    var        go to state 46


State 192

   33 if_loop: ELSE statement SEMICOLON . ifelse_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    ENDIF     shift, and go to state 194
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement    go to state 195
    ifelse_loop  go to state 196
    var          go to state 46


State 193

   32 if_loop: statement SEMICOLON if_loop .

    $default  reduce using rule 32 (if_loop)


State 194

   34 ifelse_loop: ENDIF .

    $default  reduce using rule 34 (ifelse_loop)


State 195

   35 ifelse_loop: statement . SEMICOLON ifelse_loop

    SEMICOLON  shift, and go to state 197


State 196

   33 if_loop: ELSE statement SEMICOLON ifelse_loop .

    $default  reduce using rule 33 (if_loop)


State 197

   35 ifelse_loop: statement SEMICOLON . ifelse_loop

    IDENT     shift, and go to state 35
    IF        shift, and go to state 36
    ENDIF     shift, and go to state 194
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOREACH   shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43

    statement    go to state 195
    ifelse_loop  go to state 198
    var          go to state 46


State 198

   35 ifelse_loop: statement SEMICOLON ifelse_loop .

    $default  reduce using rule 35 (ifelse_loop)
